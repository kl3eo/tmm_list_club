{"ast":null,"code":"var _jsxFileName = \"/home/alex/react_projects/tmm_list_club/src/components/Tableau.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useTable, usePagination, useSortBy, useFilters, useGroupBy, useExpanded, useRowSelect } from 'react-table';\nimport matchSorter from 'match-sorter';\nimport { useSelector } from \"react-redux\";\nimport User from './User';\nimport CustomizedDialogs from './CustomizedDialogs'; //import axios from 'axios';\n\nimport Link from '@material-ui/core/Link';\nconst Styles = styled.div.withConfig({\n  displayName: \"Tableau__Styles\",\n  componentId: \"pp40y-0\"\n})([\"padding:1rem;table{border-spacing:0;border:1px solid black;tr{:last-child{td{border-bottom:0;}}}th,td{margin:0;padding:0.5rem;border-bottom:1px solid black;border-right:1px solid black;:last-child{border-right:0;}}td{input{font-size:1rem;padding:0;margin:0;border:0;}}}.pagination{padding:0.5rem;}\"]);\n\nconst EditableCell = ({\n  cell: {\n    value: initialValue\n  },\n  row: {\n    index\n  },\n  column: {\n    id\n  },\n  updateMyData,\n  // This is a custom function that we supplied to our table instance\n  editable\n}) => {\n  const [value, setValue] = React.useState(initialValue);\n\n  const onChange = e => {\n    setValue(e.target.value);\n  };\n\n  const onBlur = () => {\n    updateMyData(index, id, value);\n  };\n\n  React.useEffect(() => {\n    setValue(initialValue);\n  }, [initialValue]);\n\n  if (!editable) {\n    return `${initialValue}`;\n  } //ash\n\n\n  if (value != null) {\n    return React.createElement(\"input\", {\n      value: value,\n      onChange: onChange,\n      onBlur: onBlur,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    });\n  }\n\n  ;\n\n  if (value == null) {\n    return React.createElement(\"input\", {\n      value: \"\",\n      onChange: onChange,\n      onBlur: onBlur,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    });\n  }\n\n  ;\n};\n\nfunction DefaultColumnFilter({\n  column: {\n    filterValue,\n    preFilteredRows,\n    setFilter\n  }\n}) {\n  const count = preFilteredRows.length;\n  return React.createElement(\"input\", {\n    value: filterValue || '',\n    onChange: e => {\n      setFilter(e.target.value || undefined); // Set undefined to remove the filter entirely\n    },\n    placeholder: `Поиск по ${count} запис...`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  });\n}\n\nfunction fuzzyTextFilterFn(rows, id, filterValue) {\n  return matchSorter(rows, filterValue, {\n    keys: [row => row.values[id]]\n  });\n}\n\nfuzzyTextFilterFn.autoRemove = val => !val;\n\nfunction Table({\n  columns,\n  data,\n  updateMyData,\n  skipReset\n}) {\n  const filterTypes = React.useMemo(() => ({\n    fuzzyText: fuzzyTextFilterFn,\n    text: (rows, id, filterValue) => {\n      return rows.filter(row => {\n        const rowValue = row.values[id];\n        return rowValue !== undefined ? String(rowValue).toLowerCase().startsWith(String(filterValue).toLowerCase()) : true;\n      });\n    }\n  }), []);\n  const defaultColumn = React.useMemo(() => ({\n    Filter: DefaultColumnFilter,\n    Cell: EditableCell\n  }), []);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    page,\n    // Instead of using 'rows', we'll use page,\n    // which has only the rows for the active page\n    // The rest of these things are super handy, too ;)\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n    state: {\n      pageIndex,\n      pageSize,\n      groupBy,\n      expanded,\n      filters,\n      selectedRowIds\n    }\n  } = useTable({\n    columns,\n    data,\n    defaultColumn,\n    filterTypes,\n    updateMyData,\n    autoResetPage: !skipReset,\n    autoResetSelectedRows: !skipReset,\n    initialState: {\n      pageSize: 20\n    }\n  }, useFilters, useGroupBy, useSortBy, useExpanded, usePagination, useRowSelect, hooks => {\n    hooks.flatColumns.push(columns => {\n      return [{\n        id: 'selection',\n        groupByBoundary: true,\n        Header: ({\n          getToggleAllRowsSelectedProps\n        }) => React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191\n          },\n          __self: this\n        }, React.createElement(IndeterminateCheckbox, Object.assign({}, getToggleAllRowsSelectedProps(), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192\n          },\n          __self: this\n        }))),\n        Cell: ({\n          row\n        }) => React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196\n          },\n          __self: this\n        }, React.createElement(IndeterminateCheckbox, Object.assign({}, row.getToggleRowSelectedProps(), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197\n          },\n          __self: this\n        })))\n      }, ...columns];\n    });\n  });\n  return React.createElement(React.Fragment, null, React.createElement(\"table\", Object.assign({}, getTableProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }), React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, headerGroups.map(headerGroup => React.createElement(\"tr\", Object.assign({}, headerGroup.getHeaderGroupProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }), headerGroup.headers.map(column => React.createElement(\"th\", Object.assign({}, column.getHeaderProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, column.canGroupBy ? // If the column can be grouped, let's add a toggle\n  React.createElement(\"span\", Object.assign({}, column.getGroupByToggleProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }), column.isGrouped ? '🛑 ' : '👊 ') : null, React.createElement(\"span\", Object.assign({}, column.getSortByToggleProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }), column.render('Header'), column.isSorted ? column.isSortedDesc ? ' 🔽' : ' 🔼' : '')), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233\n    },\n    __self: this\n  }, column.canFilter ? column.render('Filter') : null)))))), React.createElement(\"tbody\", Object.assign({}, getTableBodyProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  }), page.map(row => {\n    prepareRow(row);\n    return React.createElement(\"tr\", Object.assign({}, row.getRowProps(), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }), row.cells.map(cell => {\n      return React.createElement(\"td\", Object.assign({}, cell.getCellProps(), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }), cell.isGrouped ? // If it's a grouped cell, add an expander and row count\n      React.createElement(React.Fragment, null, React.createElement(\"span\", Object.assign({}, row.getExpandedToggleProps(), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }), row.isExpanded ? '👇' : '👉'), ' ', cell.render('Cell', {\n        editable: false\n      }), \" (\", row.subRows.length, \")\") : cell.isAggregated ? // If the cell is aggregated, use the Aggregated\n      // renderer for cell\n      cell.render('Aggregated') : cell.isRepeatedValue ? null : // For cells with repeated values, render null\n      // Otherwise, just render the regular cell\n      cell.render('Cell', {\n        editable: true\n      }));\n    }));\n  }))), \"\\u043D\\u0430 \\u0441\\u0430\\u0439\\u0442 \", React.createElement(Link, {\n    href: \"https://tennismatchmachine.com/cgi/ru/tclub\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271\n    },\n    __self: this\n  }, \"=>\"), React.createElement(\"div\", {\n    className: \"pagination\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => gotoPage(0),\n    disabled: !canPreviousPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274\n    },\n    __self: this\n  }, '<<'), ' ', React.createElement(\"button\", {\n    onClick: () => previousPage(),\n    disabled: !canPreviousPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277\n    },\n    __self: this\n  }, '<'), ' ', React.createElement(\"button\", {\n    onClick: () => nextPage(),\n    disabled: !canNextPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280\n    },\n    __self: this\n  }, '>'), ' ', React.createElement(\"button\", {\n    onClick: () => gotoPage(pageCount - 1),\n    disabled: !canNextPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283\n    },\n    __self: this\n  }, '>>'), ' ', React.createElement(\"span\", {\n    style: {\n      margin: '5px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286\n    },\n    __self: this\n  }, \" \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0430\", ' ', React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286\n    },\n    __self: this\n  }, pageIndex + 1, \" \\u0438\\u0437 \", pageOptions.length), ' ', \" \"), React.createElement(\"span\", {\n    style: {\n      margin: '5px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287\n    },\n    __self: this\n  }, \" | \\u043F\\u0435\\u0440\\u0435\\u0439\\u0442\\u0438 \\u043D\\u0430:\", ' ', React.createElement(\"input\", {\n    type: \"number\",\n    defaultValue: pageIndex + 1,\n    onChange: e => {\n      const page = e.target.value ? Number(e.target.value) - 1 : 0;\n      gotoPage(page);\n    },\n    style: {\n      width: '100px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288\n    },\n    __self: this\n  })), ' ', React.createElement(\"select\", {\n    value: pageSize,\n    onChange: e => {\n      setPageSize(Number(e.target.value));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298\n    },\n    __self: this\n  }, [10, 20, 30, 40, 50].map(pageSize => React.createElement(\"option\", {\n    key: pageSize,\n    value: pageSize,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305\n    },\n    __self: this\n  }, pageSize)))), React.createElement(\"div\", {\n    style: {\n      display: 'none'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311\n    },\n    __self: this\n  }, React.createElement(\"pre\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312\n    },\n    __self: this\n  }, React.createElement(\"code\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313\n    },\n    __self: this\n  }, JSON.stringify({\n    pageIndex,\n    pageSize,\n    pageCount,\n    canNextPage,\n    canPreviousPage,\n    groupBy,\n    expanded: expanded,\n    filters,\n    selectedRowIds: selectedRowIds\n  }, null, 2)))));\n}\n\nfunction filterGreaterThan(rows, id, filterValue) {\n  return rows.filter(row => {\n    const rowValue = row.values[id];\n    return rowValue >= filterValue;\n  });\n}\n\nfilterGreaterThan.autoRemove = val => typeof val !== 'number';\n\nconst IndeterminateCheckbox = React.forwardRef(({\n  indeterminate,\n  ...rest\n}, ref) => {\n  const defaultRef = React.useRef();\n  const resolvedRef = ref || defaultRef;\n  React.useEffect(() => {\n    resolvedRef.current.indeterminate = indeterminate;\n  }, [resolvedRef, indeterminate]);\n  return React.createElement(React.Fragment, null, React.createElement(\"input\", Object.assign({\n    type: \"checkbox\",\n    ref: resolvedRef\n  }, rest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357\n    },\n    __self: this\n  })));\n});\n\nfunction Tableau() {\n  const [data, setData] = React.useState([]);\n  const [message, setMessage] = React.useState('...Loading...');\n  const [open, setOpen] = React.useState(false);\n  const [auth, setAuth] = React.useState(false);\n  const users = useSelector(state => state.users);\n  const unlock = useSelector(state => state.auth);\n  React.useEffect(() => {\n    getResponse();\n    checkAuth();\n  });\n\n  const getResponse = () => {\n    setData(users);\n  };\n\n  const checkAuth = () => {\n    setAuth(unlock);\n  };\n\n  const callbackFunction = childData => {\n    setMessage(childData);\n  };\n\n  const onUserClick = () => {\n    setMessage('');\n    setOpen(true);\n  };\n\n  const columns = React.useMemo(() => [{\n    Header: 'Список игроков клуба Motivation',\n    columns: [{\n      Header: 'Имя',\n      accessor: 'name',\n      Cell: ({\n        cell: {\n          value\n        }\n      }) => React.createElement(\"div\", {\n        onClick: onUserClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409\n        },\n        __self: this\n      }, React.createElement(User, {\n        name: value,\n        parentCallback: callbackFunction,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409\n        },\n        __self: this\n      }))\n    }, {\n      Header: 'Уровень',\n      accessor: 'level',\n      aggregate: ['sum', 'uniqueCount'],\n      Aggregated: ({\n        cell: {\n          value\n        }\n      }) => `${value} уникальных`\n    }, {\n      Header: 'Ракета',\n      accessor: 'raquet',\n      filter: 'fuzzyText',\n      aggregate: ['sum', 'uniqueCount'],\n      Aggregated: ({\n        cell: {\n          value\n        }\n      }) => `${value} уникальных`\n    }, {\n      Header: 'Метро',\n      accessor: 'metro',\n      filter: 'fuzzyText',\n      aggregate: ['sum', 'uniqueCount'],\n      Aggregated: ({\n        cell: {\n          value\n        }\n      }) => `${value} уникальных`\n    }, {\n      Header: 'Год рождения',\n      accessor: 'yob',\n      aggregate: ['sum', 'uniqueCount'],\n      Aggregated: ({\n        cell: {\n          value\n        }\n      }) => `${value} уникальных`\n    }, {\n      Header: 'Начало карьеры',\n      accessor: 'yost',\n      aggregate: ['sum', 'uniqueCount'],\n      Aggregated: ({\n        cell: {\n          value\n        }\n      }) => `${value} уникальных`\n    }, {\n      Header: 'В клубе с',\n      accessor: 'since',\n      aggregate: ['sum', 'uniqueCount'],\n      Aggregated: ({\n        cell: {\n          value\n        }\n      }) => `${value} уникальных`\n    }, {\n      Header: 'Когда был(а)',\n      accessor: 'last_seen',\n      aggregate: ['sum', 'uniqueCount'],\n      Aggregated: ({\n        cell: {\n          value\n        }\n      }) => `${value} уникальных`\n    }]\n  }], []);\n  const skipResetRef = React.useRef(false);\n\n  const updateMyData = (rowIndex, columnId, value) => {\n    skipResetRef.current = true;\n    setData(old => old.map((row, index) => {\n      if (index === rowIndex) {\n        return { ...row,\n          [columnId]: value\n        };\n      }\n\n      return row;\n    }));\n  };\n\n  React.useEffect(() => {\n    skipResetRef.current = false;\n  }, [data]);\n  return React.createElement(Styles, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 500\n    },\n    __self: this\n  }, React.createElement(CustomizedDialogs, {\n    content: message,\n    open: open,\n    parentCallback: () => setOpen(false),\n    auth: auth,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 501\n    },\n    __self: this\n  }), React.createElement(Table, {\n    columns: columns,\n    data: data,\n    updateMyData: updateMyData,\n    skipReset: skipResetRef.current,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 503\n    },\n    __self: this\n  }));\n}\n\nexport default Tableau;","map":{"version":3,"sources":["/home/alex/react_projects/tmm_list_club/src/components/Tableau.js"],"names":["React","styled","useTable","usePagination","useSortBy","useFilters","useGroupBy","useExpanded","useRowSelect","matchSorter","useSelector","User","CustomizedDialogs","Link","Styles","div","EditableCell","cell","value","initialValue","row","index","column","id","updateMyData","editable","setValue","useState","onChange","e","target","onBlur","useEffect","DefaultColumnFilter","filterValue","preFilteredRows","setFilter","count","length","undefined","fuzzyTextFilterFn","rows","keys","values","autoRemove","val","Table","columns","data","skipReset","filterTypes","useMemo","fuzzyText","text","filter","rowValue","String","toLowerCase","startsWith","defaultColumn","Filter","Cell","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","pageIndex","pageSize","groupBy","expanded","filters","selectedRowIds","autoResetPage","autoResetSelectedRows","initialState","hooks","flatColumns","push","groupByBoundary","Header","getToggleAllRowsSelectedProps","getToggleRowSelectedProps","map","headerGroup","getHeaderGroupProps","headers","getHeaderProps","canGroupBy","getGroupByToggleProps","isGrouped","getSortByToggleProps","render","isSorted","isSortedDesc","canFilter","getRowProps","cells","getCellProps","getExpandedToggleProps","isExpanded","subRows","isAggregated","isRepeatedValue","margin","Number","width","display","JSON","stringify","filterGreaterThan","IndeterminateCheckbox","forwardRef","indeterminate","rest","ref","defaultRef","useRef","resolvedRef","current","Tableau","setData","message","setMessage","open","setOpen","auth","setAuth","users","unlock","getResponse","checkAuth","callbackFunction","childData","onUserClick","accessor","aggregate","Aggregated","skipResetRef","rowIndex","columnId","old"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport {\n  useTable,\n  usePagination,\n  useSortBy,\n  useFilters,\n  useGroupBy,\n  useExpanded,\n  useRowSelect,\n} from 'react-table'\n\nimport matchSorter from 'match-sorter'\nimport { useSelector } from \"react-redux\";\n\nimport User from './User'\nimport CustomizedDialogs from './CustomizedDialogs'\n//import axios from 'axios';\nimport Link from '@material-ui/core/Link';\n\nconst Styles = styled.div`\n  padding: 1rem;\n\n  table {\n    border-spacing: 0;\n    border: 1px solid black;\n\n    tr {\n      :last-child {\n        td {\n          border-bottom: 0;\n        }\n      }\n    }\n\n    th,\n    td {\n      margin: 0;\n      padding: 0.5rem;\n      border-bottom: 1px solid black;\n      border-right: 1px solid black;\n\n      :last-child {\n        border-right: 0;\n      }\n    }\n\n    td {\n      input {\n        font-size: 1rem;\n        padding: 0;\n        margin: 0;\n        border: 0;\n      }\n    }\n  }\n\n  .pagination {\n    padding: 0.5rem;\n  }\n`\n\nconst EditableCell = ({\n  cell: { value: initialValue },\n  row: { index },\n  column: { id },\n  updateMyData, // This is a custom function that we supplied to our table instance\n  editable,\n}) => {\n const [value, setValue] = React.useState(initialValue)\n\n  const onChange = e => {\n    setValue(e.target.value)\n  }\n\n  const onBlur = () => {\n    updateMyData(index, id, value)\n  }\n\n  React.useEffect(() => {\n    setValue(initialValue)\n  }, [initialValue])\n\n  if (!editable) {\n    return `${initialValue}`\n  }\n  //ash\n  if (value != null) {  return <input value={value} onChange={onChange} onBlur={onBlur} />};\n  if (value == null) {  return <input value=\"\" onChange={onChange} onBlur={onBlur} />};\n  \n}\n\n\nfunction DefaultColumnFilter({\n  column: { filterValue, preFilteredRows, setFilter },\n}) {\n  const count = preFilteredRows.length\n\n  return (\n    <input\n      value={filterValue || ''}\n      onChange={e => {\n        setFilter(e.target.value || undefined) // Set undefined to remove the filter entirely\n      }}\n      placeholder={`Поиск по ${count} запис...`}\n    />\n  )\n}\n\n\n\nfunction fuzzyTextFilterFn(rows, id, filterValue) {\n  return matchSorter(rows, filterValue, { keys: [row => row.values[id]] })\n}\n\n\nfuzzyTextFilterFn.autoRemove = val => !val\n\n\nfunction Table({ columns, data, updateMyData, skipReset }) {\n  const filterTypes = React.useMemo(\n    () => ({\n\n      fuzzyText: fuzzyTextFilterFn,\n\n      text: (rows, id, filterValue) => {\n        return rows.filter(row => {\n          const rowValue = row.values[id]\n          return rowValue !== undefined\n            ? String(rowValue)\n                .toLowerCase()\n                .startsWith(String(filterValue).toLowerCase())\n            : true\n        })\n      },\n    }),\n    []\n  )\n\n  const defaultColumn = React.useMemo(\n    () => ({\n      Filter: DefaultColumnFilter,\n      Cell: EditableCell,\n    }),\n    []\n  )\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    page, // Instead of using 'rows', we'll use page,\n    // which has only the rows for the active page\n\n    // The rest of these things are super handy, too ;)\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n    state: { pageIndex, pageSize, groupBy, expanded, filters, selectedRowIds },\n  } = useTable(\n    {\n      columns,\n      data,\n      defaultColumn,\n      filterTypes,\n      updateMyData,\n      autoResetPage: !skipReset,\n      autoResetSelectedRows: !skipReset,\n      initialState: { pageSize:20 },\n    },\n    useFilters,\n    useGroupBy,\n    useSortBy,\n    useExpanded,\n    usePagination,\n    useRowSelect,\n\n    hooks => {\n      hooks.flatColumns.push(columns => {\n        return [\n          {\n            id: 'selection',\n           groupByBoundary: true,\n            Header: ({ getToggleAllRowsSelectedProps }) => (\n              <div>\n                <IndeterminateCheckbox {...getToggleAllRowsSelectedProps()} />\n              </div>\n            ),\n            Cell: ({ row }) => (\n              <div>\n                <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\n              </div>\n            ),\n          },\n          ...columns,\n        ]\n      })\n    }\n  )\n\n  return (\n    <>\n      <table {...getTableProps()}>\n        <thead>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                <th {...column.getHeaderProps()}>\n                  <div>\n                    {column.canGroupBy ? (\n                      // If the column can be grouped, let's add a toggle\n                      <span {...column.getGroupByToggleProps()}>\n                        {column.isGrouped ? '🛑 ' : '👊 '}\n                      </span>\n                    ) : null}\n                    <span {...column.getSortByToggleProps()}>\n                      {column.render('Header')}\n                      {/* Add a sort direction indicator */}\n                      {column.isSorted\n                        ? column.isSortedDesc\n                          ? ' 🔽'\n                          : ' 🔼'\n                        : ''}\n                    </span>\n                  </div>\n                  {/* Render the columns filter UI */}\n                  <div>{column.canFilter ? column.render('Filter') : null}</div>\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {page.map(row => {\n            prepareRow(row)\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map(cell => {\n                  return (\n                    <td {...cell.getCellProps()}>\n                      {cell.isGrouped ? (\n                        // If it's a grouped cell, add an expander and row count\n                        <>\n                          <span {...row.getExpandedToggleProps()}>\n                            {row.isExpanded ? '👇' : '👉'}\n                          </span>{' '}\n                          {cell.render('Cell', { editable: false })} (\n                          {row.subRows.length})\n                        </>\n                      ) : cell.isAggregated ? (\n                        // If the cell is aggregated, use the Aggregated\n                        // renderer for cell\n                        cell.render('Aggregated')\n                      ) : cell.isRepeatedValue ? null : ( // For cells with repeated values, render null\n                        // Otherwise, just render the regular cell\n                        cell.render('Cell', { editable: true })\n                      )}\n                    </td>\n                  )\n                })}\n              </tr>\n            )\n          })}\n        </tbody>\n      </table>на сайт <Link href=\"https://tennismatchmachine.com/cgi/ru/tclub\">=></Link>\n      { }\n      <div className=\"pagination\">\n        <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\n          {'<<'}\n        </button>{' '}\n        <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n          {'<'}\n        </button>{' '}\n        <button onClick={() => nextPage()} disabled={!canNextPage}>\n          {'>'}\n        </button>{' '}\n        <button onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\n          {'>>'}\n        </button>{' '}\n        <span style={{margin:'5px'}}> страница{' '}<strong>{pageIndex + 1} из {pageOptions.length}</strong>{' '} </span>\n        <span style={{margin:'5px'}}> | перейти на:{' '}\n          <input\n            type=\"number\"\n            defaultValue={pageIndex + 1}\n            onChange={e => {\n              const page = e.target.value ? Number(e.target.value) - 1 : 0\n              gotoPage(page)\n            }}\n            style={{ width: '100px' }}\n          />\n        </span>{' '}\n        <select\n          value={pageSize}\n          onChange={e => {\n            setPageSize(Number(e.target.value))\n          }}\n        >\n          {[10, 20, 30, 40, 50].map(pageSize => (\n            <option key={pageSize} value={pageSize}>\n              {pageSize}\n            </option>\n          ))}\n        </select>\n      </div>\n      <div style={{display:'none'}}>\n      <pre>\n        <code>\n          {JSON.stringify(\n            {\n              pageIndex,\n              pageSize,\n              pageCount,\n              canNextPage,\n              canPreviousPage,\n              groupBy,\n              expanded: expanded,\n              filters,\n              selectedRowIds: selectedRowIds,\n            },\n            null,\n            2\n          )}\n        </code>\n      </pre>\n      </div>\n    </>\n  )\n}\n\nfunction filterGreaterThan(rows, id, filterValue) {\n  return rows.filter(row => {\n    const rowValue = row.values[id]\n    return rowValue >= filterValue\n  })\n}\n\nfilterGreaterThan.autoRemove = val => typeof val !== 'number'\n\n\nconst IndeterminateCheckbox = React.forwardRef(\n  ({ indeterminate, ...rest }, ref) => {\n    const defaultRef = React.useRef()\n    const resolvedRef = ref || defaultRef\n\n    React.useEffect(() => {\n      resolvedRef.current.indeterminate = indeterminate\n    }, [resolvedRef, indeterminate])\n\n    return (\n      <>\n        <input type=\"checkbox\" ref={resolvedRef} {...rest} />\n      </>\n    )\n  }\n)\n\nfunction Tableau() {\n\n  const [data, setData] = React.useState([]);\n  const [message, setMessage] = React.useState('...Loading...');\n  const [open, setOpen] = React.useState(false);\n  const [auth, setAuth] = React.useState(false);\n  const users = useSelector(state => state.users);\n  const unlock = useSelector(state => state.auth);\n  \n  React.useEffect(() => {\n    \tgetResponse();\n\tcheckAuth();\n  });\n\n\n  const getResponse = () => {\n\n    setData(users);\n\n  }\n\n\n  const checkAuth = () => {\n\n    setAuth(unlock);\n  \n  }\n  \n  const callbackFunction = (childData) => {\n    setMessage(childData);\n  }\n  \n  const onUserClick = () => {\n     setMessage('');\n     setOpen(true);\n  } \n    \n  const columns = React.useMemo(\n    () => [\n      {\n        Header: 'Список игроков клуба Motivation',\n        columns: [\n  \n          {\n            Header: 'Имя',\n\t    accessor: 'name',\n\t   Cell: ({ cell: { value } }) => <div onClick={onUserClick}><User name={value} parentCallback={callbackFunction} /></div>\n          },\n          {\n            Header: 'Уровень',\n            accessor: 'level',\n\n            aggregate: ['sum', 'uniqueCount'],\n            Aggregated: ({ cell: { value } }) => `${value} уникальных`,\n          },          \n\t  {\n            Header: 'Ракета',\n            accessor: 'raquet',\n\n            filter: 'fuzzyText',\n\n            aggregate: ['sum', 'uniqueCount'],\n            Aggregated: ({ cell: { value } }) => `${value} уникальных`,\n          },\n\t  {\n            Header: 'Метро',\n            accessor: 'metro',\n\n            filter: 'fuzzyText',\n\n            aggregate: ['sum', 'uniqueCount'],\n            Aggregated: ({ cell: { value } }) => `${value} уникальных`,\n          },\n\t  {\n            Header: 'Год рождения',\n            accessor: 'yob',\n\n\n            aggregate: ['sum', 'uniqueCount'],\n            Aggregated: ({ cell: { value } }) => `${value} уникальных`,\n          },\n\t  {\n            Header: 'Начало карьеры',\n            accessor: 'yost',\n\n\n            aggregate: ['sum', 'uniqueCount'],\n            Aggregated: ({ cell: { value } }) => `${value} уникальных`,\n          },\n\t  {\n            Header: 'В клубе с',\n            accessor: 'since',\n\n\n            aggregate: ['sum', 'uniqueCount'],\n            Aggregated: ({ cell: { value } }) => `${value} уникальных`,\n          },\n\t  {\n            Header: 'Когда был(а)',\n            accessor: 'last_seen',\n\n\n            aggregate: ['sum', 'uniqueCount'],\n            Aggregated: ({ cell: { value } }) => `${value} уникальных`,\n          },\n        ],\n      },\n    ],\n    []\n  )\n\n\n\n  const skipResetRef = React.useRef(false)\n\n  const updateMyData = (rowIndex, columnId, value) => {\n\n    skipResetRef.current = true\n    setData(old =>\n      old.map((row, index) => {\n        if (index === rowIndex) {\n          return {\n            ...row,\n            [columnId]: value,\n          }\n        }\n        return row\n      })\n    )\n  }\n\n  React.useEffect(() => {\n    skipResetRef.current = false\n  }, [data])\n\n\n  return (\n    <Styles>\n    <CustomizedDialogs content={message} open={open} parentCallback={() => setOpen(false)} auth={auth}/>\n    \n     <Table\n        columns={columns}\n        data={data}\n        updateMyData={updateMyData}\n        skipReset={skipResetRef.current}\n      />\n    </Styles>\n  )\n}\n\n\nexport default Tableau\n"]},"metadata":{},"sourceType":"module"}