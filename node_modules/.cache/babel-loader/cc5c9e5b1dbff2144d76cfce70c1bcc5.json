{"ast":null,"code":"var _jsxFileName = \"/home/alex/react_projects/tmm_list_club/src/components/CustomizedDialogs.js\";\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Grow from '@material-ui/core/Grow'; //import Link from '@material-ui/core/Link';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2)\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500]\n  }\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const {\n    children,\n    classes,\n    onClose,\n    ...other\n  } = props;\n  return React.createElement(MuiDialogTitle, Object.assign({\n    disableTypography: true,\n    className: classes.root\n  }, other, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    variant: \"h6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, children), onClose ? React.createElement(IconButton, {\n    \"aria-label\": \"close\",\n    className: classes.closeButton,\n    onClick: onClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(CloseIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  })) : null);\n});\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2)\n  }\n}))(MuiDialogContent);\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1)\n  }\n}))(MuiDialogActions);\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return React.createElement(Grow, Object.assign({\n    direction: \"up\",\n    ref: ref\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }));\n}); ///////////////////\n//Classes\n\nclass CustomizedDialogs extends React.Component {\n  render() {\n    //   const CONTENT = this.props.auth ? this.props.content ? this.props.content : '.. передача данных с' : 'для просмотра профилей войдите на сайт';\n    const CONTENT = this.props.content ? this.props.content : '.. передача данных с';\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Dialog, {\n      fullScreen: true,\n      TransitionComponent: Transition,\n      onClose: this.props.parentCallback,\n      \"aria-labelledby\": \"customized-dialog-title\",\n      open: this.props.open,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      id: \"customized-dialog-title\",\n      onClose: this.props.parentCallback,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Button, {\n      autoFocus: true,\n      onClick: this.props.parentCallback,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"\\u0432\\u0435\\u0440\\u043D\\u0443\\u0442\\u044C\\u0441\\u044F \\u043A \\u0441\\u043F\\u0438\\u0441\\u043A\\u0443\")), React.createElement(DialogContent, {\n      dividers: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      component: 'span',\n      variant: 'body2',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, CONTENT)), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Button, {\n      autoFocus: true,\n      onClick: this.props.parentCallback,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Close\"))));\n  }\n\n}\n\nexport default CustomizedDialogs; //////////////\n//Hooks - broken!!! don't know how yet\n\n/*\nexport default function CustomizedDialogs(props) {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  \n  return (\n    <div>\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n          Modal title\n        </DialogTitle>\n        <DialogContent dividers>\n          <Typography gutterBottom>\n            Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis\n            in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\n          </Typography>\n          <Typography gutterBottom>\n            Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis\n            lacus vel augue laoreet rutrum faucibus dolor auctor.\n          </Typography>\n          <Typography gutterBottom>\n            Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel\n            scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus\n            auctor fringilla.\n          </Typography>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            Save changes\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n*/","map":{"version":3,"sources":["/home/alex/react_projects/tmm_list_club/src/components/CustomizedDialogs.js"],"names":["React","withStyles","Button","Dialog","MuiDialogTitle","MuiDialogContent","MuiDialogActions","IconButton","CloseIcon","Typography","Grow","styles","theme","root","margin","padding","spacing","closeButton","position","right","top","color","palette","grey","DialogTitle","props","children","classes","onClose","other","DialogContent","DialogActions","Transition","forwardRef","ref","CustomizedDialogs","Component","render","CONTENT","content","parentCallback","open"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Grow from '@material-ui/core/Grow';\n//import Link from '@material-ui/core/Link';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Grow direction=\"up\" ref={ref} {...props} />;\n});\n\n///////////////////\n//Classes\n\n\nclass CustomizedDialogs extends React.Component {\n\n  render() {\n\n\n//   const CONTENT = this.props.auth ? this.props.content ? this.props.content : '.. передача данных с' : 'для просмотра профилей войдите на сайт';\nconst CONTENT = this.props.content ? this.props.content : '.. передача данных с';\n\n   return (\n    <div>\n      <Dialog fullScreen TransitionComponent={Transition} onClose={this.props.parentCallback} aria-labelledby=\"customized-dialog-title\" open={this.props.open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={this.props.parentCallback}>\n          <Button autoFocus onClick={this.props.parentCallback} color=\"primary\">\n\t  \t вернуться к списку\n\t  </Button>\n        </DialogTitle>\n        <DialogContent dividers>\n          <Typography  component={'span'} variant={'body2'}>\n\t\t{CONTENT}\n          </Typography>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={this.props.parentCallback} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n    );\n  }\n}\n\nexport default CustomizedDialogs;\n\n//////////////\n//Hooks - broken!!! don't know how yet\n/*\nexport default function CustomizedDialogs(props) {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  \n  return (\n    <div>\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n          Modal title\n        </DialogTitle>\n        <DialogContent dividers>\n          <Typography gutterBottom>\n            Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis\n            in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\n          </Typography>\n          <Typography gutterBottom>\n            Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis\n            lacus vel augue laoreet rutrum faucibus dolor auctor.\n          </Typography>\n          <Typography gutterBottom>\n            Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel\n            scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus\n            auctor fringilla.\n          </Typography>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            Save changes\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n*/\n"]},"metadata":{},"sourceType":"module"}