{"ast":null,"code":"var _jsxFileName = \"/home/alex/react_projects/tmm_list_club/src/components/User.js\";\n//Hooks\n///////////////////\n\n/*\nimport React, { useState } from 'react';\n\nconst User = (props) => {\n\n  const [isHovered, setIsHovered] = useState(false);\n  \n  const toggleHover = () => {\n  \tsetIsHovered(!isHovered);\n  }\n\n  return (\n        <span className={isHovered ? 'blu' : 'norma'} onMouseEnter={toggleHover} onMouseLeave={toggleHover}>{props.name}</span>\n  );\n};\n*/\n// Classes\n///////////////////\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport UserCard from './UserCard';\nimport { connect } from 'react-redux';\n\nclass User extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isHovered: false\n    };\n    this.toggleHover = this.toggleHover.bind(this);\n  }\n\n  toggleHover() {\n    this.setState(prevState => ({\n      isHovered: !prevState.isHovered\n    }));\n  } //hack ash with credentials :  \n\n\n  async getUserData(uname) {\n    await axios.get('https://tennismatchmachine.com/cgi/genc/tmm_api.pl?name=' + uname, {\n      withCredentials: true\n    }, {\n      responseType: 'json'\n    }) //await axios.get('https://xetr.ru/cgi/genc/tmm_api.pl?name='+uname, {responseType: 'json'})\n    .then(response => {\n      var obj = response.data[0];\n      this.props.dispatch({\n        type: 'CHECK_AUTH',\n        payload: obj === 'U' ? false : true\n      });\n      this.props.parentCallback(React.createElement(UserCard, {\n        obj: obj,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }));\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n  /*\n    getUserData(uname) {\n      fetch('https://tennismatchmachine.com/cgi/genc/tmm_api.pl?name='+uname, {credentials: 'include'})\n        .then(response => response.json())\n        .then(json => { var obj = json.data[0];//console.log('here obj is '+ obj);\n          if (obj === 'Unauthorized') this.props.dispatch({\n            type: 'CHECK_AUTH',\n            payload: false\n          });\n  \tthis.props.parentCallback(<UserCard obj={obj} />);\n        }) \t\n    }\n  */\n\n\n  render() {\n    const btnClass = this.state.isHovered ? 'blu' : 'norma';\n    return React.createElement(\"span\", {\n      className: btnClass,\n      onMouseEnter: this.toggleHover,\n      onMouseLeave: this.toggleHover,\n      onClick: e => this.getUserData(this.props.name, e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, this.props.name);\n  }\n\n}\n\n;\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    dispatch\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(User);","map":{"version":3,"sources":["/home/alex/react_projects/tmm_list_club/src/components/User.js"],"names":["React","Component","axios","UserCard","connect","User","constructor","props","state","isHovered","toggleHover","bind","setState","prevState","getUserData","uname","get","withCredentials","responseType","then","response","obj","data","dispatch","type","payload","parentCallback","catch","error","console","log","render","btnClass","e","name","mapStateToProps","auth","mapDispatchToProps"],"mappings":";AAAA;AACA;;AACA;;;;;;;;;;;;;;;;AAgBA;AACA;AACA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,IAAN,SAAmBJ,SAAnB,CAA6B;AAC3BK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAG;AADD,KAAb;AAGA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAEDD,EAAAA,WAAW,GAAE;AACX,SAAKE,QAAL,CAAcC,SAAS,KAAK;AAACJ,MAAAA,SAAS,EAAE,CAACI,SAAS,CAACJ;AAAvB,KAAL,CAAvB;AACD,GAX0B,CAa7B;;;AAEE,QAAMK,WAAN,CAAkBC,KAAlB,EAAyB;AAC1B,UAAMb,KAAK,CAACc,GAAN,CAAU,6DAA2DD,KAArE,EAA4E;AAACE,MAAAA,eAAe,EAAE;AAAlB,KAA5E,EAAqG;AAACC,MAAAA,YAAY,EAAE;AAAf,KAArG,EACN;AADM,KAEMC,IAFN,CAEWC,QAAQ,IAAI;AAAE,UAAIC,GAAG,GAAGD,QAAQ,CAACE,IAAT,CAAc,CAAd,CAAV;AAC9B,WAAKf,KAAL,CAAWgB,QAAX,CAAoB;AACVC,QAAAA,IAAI,EAAE,YADI;AAEVC,QAAAA,OAAO,EAAEJ,GAAG,KAAK,GAAR,GAAc,KAAd,GAAsB;AAFrB,OAApB;AAIA,WAAKd,KAAL,CAAWmB,cAAX,CAA0B,oBAAC,QAAD;AAAU,QAAA,GAAG,EAAEL,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA1B;AACW,KARN,EASMM,KATN,CASY,UAAUC,KAAV,EAAgB;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KAXN,CAAN;AAaE;AAEH;;;;;;;;;;;;;;;AAaEG,EAAAA,MAAM,GAAE;AACN,UAAMC,QAAQ,GAAG,KAAKxB,KAAL,CAAWC,SAAX,GAAuB,KAAvB,GAA+B,OAAhD;AAEA,WAAQ;AAAM,MAAA,SAAS,EAAEuB,QAAjB;AAA2B,MAAA,YAAY,EAAE,KAAKtB,WAA9C;AAA2D,MAAA,YAAY,EAAE,KAAKA,WAA9E;AAA2F,MAAA,OAAO,EAAGuB,CAAD,IAAO,KAAKnB,WAAL,CAAiB,KAAKP,KAAL,CAAW2B,IAA5B,EAAiCD,CAAjC,CAA3G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkJ,KAAK1B,KAAL,CAAW2B,IAA7J,CAAR;AACD;;AAhD0B;;AAiD5B;;AAED,MAAMC,eAAe,GAAG3B,KAAK,IAAI;AAC/B,SAAO;AAAC4B,IAAAA,IAAI,EAAE5B,KAAK,CAAC4B;AAAb,GAAP;AACD,CAFD;;AAIA,MAAMC,kBAAkB,GAAGd,QAAQ,IAAI;AACrC,SAAO;AACLA,IAAAA;AADK,GAAP;AAGD,CAJD;;AAMA,eAAenB,OAAO,CACpB+B,eADoB,EAEpBE,kBAFoB,CAAP,CAGbhC,IAHa,CAAf","sourcesContent":["//Hooks\n///////////////////\n/*\nimport React, { useState } from 'react';\n\nconst User = (props) => {\n\n  const [isHovered, setIsHovered] = useState(false);\n  \n  const toggleHover = () => {\n  \tsetIsHovered(!isHovered);\n  }\n\n  return (\n        <span className={isHovered ? 'blu' : 'norma'} onMouseEnter={toggleHover} onMouseLeave={toggleHover}>{props.name}</span>\n  );\n};\n*/\n// Classes\n///////////////////\nimport React, {Component} from 'react';\nimport axios from 'axios';\nimport UserCard from './UserCard'\nimport { connect } from 'react-redux'\n\nclass User extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isHovered : false\n    };\n    this.toggleHover = this.toggleHover.bind(this);\n  }\n  \n  toggleHover(){\n    this.setState(prevState => ({isHovered: !prevState.isHovered}));\n  }\n\n//hack ash with credentials :  \n\n  async getUserData(uname) {\n\tawait axios.get('https://tennismatchmachine.com/cgi/genc/tmm_api.pl?name='+uname, {withCredentials: true}, {responseType: 'json'})\n\t//await axios.get('https://xetr.ru/cgi/genc/tmm_api.pl?name='+uname, {responseType: 'json'})\n            .then(response => { var obj = response.data[0];\n\t\tthis.props.dispatch({\n          \t\ttype: 'CHECK_AUTH',\n          \t\tpayload: obj === 'U' ? false : true\n        \t});\n\t\tthis.props.parentCallback(<UserCard obj={obj} />);\n            })\n            .catch(function (error){\n                console.log(error);\n            })\n    \n  } \n\n/*\n  getUserData(uname) {\n    fetch('https://tennismatchmachine.com/cgi/genc/tmm_api.pl?name='+uname, {credentials: 'include'})\n      .then(response => response.json())\n      .then(json => { var obj = json.data[0];//console.log('here obj is '+ obj);\n        if (obj === 'Unauthorized') this.props.dispatch({\n          type: 'CHECK_AUTH',\n          payload: false\n        });\n\tthis.props.parentCallback(<UserCard obj={obj} />);\n      }) \t\n  }\n*/  \n  render(){\n    const btnClass = this.state.isHovered ? 'blu' : 'norma';\n\n    return (<span className={btnClass} onMouseEnter={this.toggleHover} onMouseLeave={this.toggleHover} onClick={(e) => this.getUserData(this.props.name,e)} >{this.props.name}</span>);\n  }\n};\n\nconst mapStateToProps = state => {\n  return {auth: state.auth}\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    dispatch\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(User)\n"]},"metadata":{},"sourceType":"module"}